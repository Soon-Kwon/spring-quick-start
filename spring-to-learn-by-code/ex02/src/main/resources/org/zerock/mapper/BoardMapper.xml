<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
						"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.zerock.mapper.BoardMapper">

	<sql id="criteria">
		<where>
			<trim prefix="(" suffix=")" prefixOverrides="OR">
				<foreach item='type' collection="typeArr">
					<trim prefix="OR">
						<choose>
							<when test="type == 'T'.toString()">
								title like concat('%', #{keyword}, '%')
							</when>
							<when test="type == 'C'.toString()">
								content like concat('%', #{keyword}, '%')
							</when>
							<when test="type == 'W'.toString()">
								writer like concat('%', #{keyword}, '%')
							</when>
						</choose>
					</trim>
				</foreach>
			</trim>
		</where>
	</sql>

	<select id="getList" resultType="org.zerock.domain.BoardVO">
	<![CDATA[
	select * from tbl_board where bno > 0
	]]>
	</select>

	<select id="getListWithPaging"
		resultType="org.zerock.domain.BoardVO">
	<![CDATA[
	select * from(
	select * from tbl_board]]>
		<include refid="criteria"></include>
	<![CDATA[
	order by bno desc
	) R1
	LIMIT #{amount} OFFSET #{skip}
	]]>
	</select>

	<insert id="insert">
		insert into tbl_board (title, content, writer)
		values(#{title}, #{content}, #{writer})
	</insert>

	<insert id="insertSelectKey">
		<selectKey keyProperty="bno" order="BEFORE"
			resultType="long">
			select max(bno)+1 from tbl_board
		</selectKey>
		insert into tbl_board (bno, title, content, writer)
		values(#{bno},
		#{title}, #{content}, #{writer})
	</insert>

	<select id="read" resultType="org.zerock.domain.BoardVO">
		select * from tbl_board where bno =
		#{bno}
	</select>

	<delete id="delete">
		delete from tbl_board where bno = #{bno}
	</delete>

	<update id="update">
		update tbl_board
		set title = #{title},
		content =
		#{content},
		writer = #{writer},
		updateDate = DEFAULT
		where bno = #{bno}
	</update>

	<select id="getTotalCount" resultType="int">
		select count(*) from tbl_board where
		<trim prefix="(" suffix=") AND" prefixOverrides="OR">
			<foreach item='type' collection="typeArr">
				<trim prefix="OR">
					<choose>
						<when test="type == 'T'.toString()">
							title like concat('%', #{keyword}, '%')
						</when>
						<when test="type == 'C'.toString()">
							content like concat('%', #{keyword}, '%')
						</when>
						<when test="type == 'W'.toString()">
							writer like concat('%', #{keyword}, '%')
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
		bno > 0
	</select>
</mapper>